package Dealership;

// C211 Group Project Team 8
// Ling Jin, Chelsea Rhea, Ben Hogan
// April 23, 2024
// Inventory management system for our dealership.
// This class manages the inventory of vehicles.
import java.util.ArrayList;
import java.util.List;

//InventoryManagementSystem class to manage the inventory of vehicles
public class InventoryManagementSystem {

    // Declare inventory array
    Vehicle[] inventory;
    int inventorySize;

    Vehicle[] rentInventory;
    int rentInventorySize;

    // Constructor to initialize the inventory array
    public InventoryManagementSystem(Vehicle[] inventory) {
        this.inventory = inventory;
        this.rentInventory = new Vehicle[inventory.length];

        inventorySize = inventory.length;
        rentInventorySize = 0;
    }
    
    //check if there is rent vehicle
    public boolean hasRentVechile(){
        return rentInventorySize > 0;
    }

    // Method to display the inventory
    public void viewInventory() {
        System.out.println("Available Vehicles:");
        for (int i = 0; i < inventorySize; i++) {

            System.out.println("Vehicle " + (i + 1) + " Make: " + inventory[i].make
                    + ", Model: " + inventory[i].model
                    + ", Color: " + inventory[i].color
                    + ", Price: $" + inventory[i].price);

        }
    }

    // Method to display the rent inventory
    public void viewRentInventory() {
        System.out.println("Rent Vehicles:");
        for (int i = 0; i < rentInventorySize; i++) {

            System.out.println("Vehicle " + (i + 1) + " Make: " + rentInventory[i].make
                    + ", Model: " + rentInventory[i].model
                    + ", Color: " + rentInventory[i].color
                    + ", Price: $" + rentInventory[i].price);

        }
    }

    // Method to rent a vehicle by its corresponding number
    public void rentVehicle(int choice) {
        if (choice < 1 || choice > inventorySize) {
            System.out.println("Invalid choice.");
        } else {
            Vehicle vehicle = inventory[choice - 1];
            System.out.println("You have rented: Make: " + inventory[choice - 1].make
                    + ", Model: " + inventory[choice - 1].model
                    + ", Color: " + inventory[choice - 1].color
                    + ", Price: $" + inventory[choice - 1].price);

            //move it to the rent vehicle
            rentInventory[rentInventorySize] = vehicle;

            //shift the inventory
            for (int i = choice - 1; i < inventorySize - 1; i++) {
                inventory[i] = inventory[i + 1];
            }

            inventorySize -= 1;
            rentInventorySize += 1;
        }
    }

    // Method to return a rented vehicle of a specific type and color
    public void returnVehicle(int choice) {

        if (choice < 1 || choice > rentInventorySize) {
            System.out.println("No renting vehicle for return.");
        } else {
            Vehicle vehicle = rentInventory[choice - 1];
            System.out.println("You have returned: Make: " + rentInventory[choice - 1].make
                    + ", Model: " + rentInventory[choice - 1].model
                    + ", Color: " + rentInventory[choice - 1].color
                    + ", Price: $" + rentInventory[choice - 1].price);

            //move it to the vehicle inventory
            inventory[inventorySize] = vehicle;

            //shift the rent inventory
            for (int i = choice - 1; i < rentInventorySize - 1; i++) {
                rentInventory[i] = rentInventory[i + 1];
            }

            inventorySize += 1;
            rentInventorySize -= 1;
        }
    }
}

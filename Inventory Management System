package Dealership;

// C211 Group Project Team 8
// Ling Jin
// April 23, 2024
// Inventory management system for our dealership.
// This class manages the inventory of vehicles.

import java.util.ArrayList;
import java.util.List;

//InventoryManagementSystem class to manage the inventory of vehicles
public class InventoryManagementSystem {
	
	// Declare inventory array
	Vehicle[] inventory; 

	// Constructor to initialize the inventory array
	public InventoryManagementSystem() {
		inventory = new Vehicle[10];
		inventory[0] = new Vehicle("Toyota "," Prius ","Red ", 78);
		inventory[1] = new Vehicle("Toyota "," Camry "," Red ", 83);
		inventory[2] = new Vehicle(" Toyota ", " Camry "," Blue ", 83);
		inventory[3] = new Vehicle(" Ford "," Explorer "," Blue ", 79);
		inventory[4] = new Vehicle(" Ford "," Explorer "," Red ", 81);
		inventory[5] = new Vehicle(" Ford "," Bronco "," Black ", 98);
		inventory[6] = new Vehicle(" Audi "," A5 "," White ", 104);
		inventory[7] = new Vehicle(" Audi "," A4 ", " Black ", 92);
		inventory[8] = new Vehicle("Audi"," A5 ", " Black ", 104);
		inventory[9] = new Vehicle(" Audi "," A4 "," Green ", 97);
	}

	// Method to display the inventory
	public void viewInventory() {
		System.out.println("Available Vehicles:");
		for (int i = 0; i < inventory.length; i++) {
			if (inventory[i] != null) {
				System.out.println("Vehicle " + (i + 1) + ": " + inventory[i].make + " " + inventory[i].model
                        + " " + inventory[i].color + " " + inventory[i].price);
			}
		}
	}

	// Method to rent a vehicle by its corresponding number
	public void rentVehicle(int choice) {
		if (choice < 1 || choice > inventory.length || inventory[choice - 1] == null) {
			System.out.println("Invalid choice.");
		} else {
			System.out.println("You have rented a " + inventory[choice - 1].make + " " + inventory[choice - 1].model
                    + " " + inventory[choice - 1].color + " " + inventory[choice - 1].price + ".");
		}
	}

	// Method to return a rented vehicle of a specific make, model and color
	public void returnVehicle(String make, String model, String color) {
		boolean found = false;
		for (int i = 0; i < inventory.length; i++) {
			if (inventory[i] != null && inventory[i].make.equals(make) && inventory[i].model.equals(model) && inventory[i].color.equals(color)) {
				inventory[i] = null;
				System.out.println("You have returned the " + color + " " + make + " " + model + ".");
				found = true;
				break;
			}
		}
		if (!found) {
			System.out.println("No matching vehicle found for return.");
		}
	}
}
